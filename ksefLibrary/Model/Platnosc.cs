/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Warunki płatności
    /// </summary>
    [DataContract(Name = "Platnosc")]
    public partial class Platnosc
    {

        /// <summary>
        /// Gets or Sets FormaPlatnosci
        /// </summary>
        [DataMember(Name = "FormaPlatnosci", EmitDefaultValue = false)]
        public TFormaPlatnosci? FormaPlatnosci { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Platnosc" /> class.
        /// </summary>
        /// <param name="zaplacono">Pojedyncze pole wyboru.</param>
        /// <param name="dataZaplaty">Data zdarzenia w okresie od 2016-07-01 do 2050-01-01.</param>
        /// <param name="znacznikZaplatyCzesciowej">Pojedyncze pole wyboru.</param>
        /// <param name="zaplataCzesciowa">zaplataCzesciowa.</param>
        /// <param name="terminPlatnosci">terminPlatnosci.</param>
        /// <param name="formaPlatnosci">formaPlatnosci.</param>
        /// <param name="platnoscInna">Pojedyncze pole wyboru.</param>
        /// <param name="opisPlatnosci">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="rachunekBankowy">rachunekBankowy.</param>
        /// <param name="rachunekBankowyFaktora">rachunekBankowyFaktora.</param>
        /// <param name="skonto">skonto.</param>
        public Platnosc(int zaplacono = default, DateTime dataZaplaty = default, int znacznikZaplatyCzesciowej = default, List<ZaplataCzesciowa> zaplataCzesciowa = default, List<TerminPlatnosci> terminPlatnosci = default, TFormaPlatnosci? formaPlatnosci = default, int platnoscInna = default, string opisPlatnosci = default, List<TRachunekBankowy> rachunekBankowy = default, List<TRachunekBankowy> rachunekBankowyFaktora = default, Skonto skonto = default)
        {
            this.Zaplacono = zaplacono;
            this.DataZaplaty = dataZaplaty;
            this.ZnacznikZaplatyCzesciowej = znacznikZaplatyCzesciowej;
            this.ZaplataCzesciowa = zaplataCzesciowa;
            this.TerminPlatnosci = terminPlatnosci;
            this.FormaPlatnosci = formaPlatnosci;
            this.PlatnoscInna = platnoscInna;
            this.OpisPlatnosci = opisPlatnosci;
            this.RachunekBankowy = rachunekBankowy;
            this.RachunekBankowyFaktora = rachunekBankowyFaktora;
            this.Skonto = skonto;
        }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "Zaplacono", EmitDefaultValue = false)]
        public int Zaplacono { get; set; }

        /// <summary>
        /// Data zdarzenia w okresie od 2016-07-01 do 2050-01-01
        /// </summary>
        /// <value>Data zdarzenia w okresie od 2016-07-01 do 2050-01-01</value>
        [DataMember(Name = "DataZaplaty", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime DataZaplaty { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "ZnacznikZaplatyCzesciowej", EmitDefaultValue = false)]
        public int ZnacznikZaplatyCzesciowej { get; set; }

        /// <summary>
        /// Gets or Sets ZaplataCzesciowa
        /// </summary>
        [DataMember(Name = "ZaplataCzesciowa", EmitDefaultValue = false)]
        public List<ZaplataCzesciowa> ZaplataCzesciowa { get; set; }

        /// <summary>
        /// Gets or Sets TerminPlatnosci
        /// </summary>
        [DataMember(Name = "TerminPlatnosci", EmitDefaultValue = false)]
        public List<TerminPlatnosci> TerminPlatnosci { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "PlatnoscInna", EmitDefaultValue = false)]
        public int PlatnoscInna { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "OpisPlatnosci", EmitDefaultValue = false)]
        public string OpisPlatnosci { get; set; }

        /// <summary>
        /// Gets or Sets RachunekBankowy
        /// </summary>
        [DataMember(Name = "RachunekBankowy", EmitDefaultValue = false)]
        public List<TRachunekBankowy> RachunekBankowy { get; set; }

        /// <summary>
        /// Gets or Sets RachunekBankowyFaktora
        /// </summary>
        [DataMember(Name = "RachunekBankowyFaktora", EmitDefaultValue = false)]
        public List<TRachunekBankowy> RachunekBankowyFaktora { get; set; }

        /// <summary>
        /// Gets or Sets Skonto
        /// </summary>
        [DataMember(Name = "Skonto", EmitDefaultValue = false)]
        public Skonto Skonto { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Platnosc {\n");
            sb.Append("  Zaplacono: ").Append(Zaplacono).Append("\n");
            sb.Append("  DataZaplaty: ").Append(DataZaplaty).Append("\n");
            sb.Append("  ZnacznikZaplatyCzesciowej: ").Append(ZnacznikZaplatyCzesciowej).Append("\n");
            sb.Append("  ZaplataCzesciowa: ").Append(ZaplataCzesciowa).Append("\n");
            sb.Append("  TerminPlatnosci: ").Append(TerminPlatnosci).Append("\n");
            sb.Append("  FormaPlatnosci: ").Append(FormaPlatnosci).Append("\n");
            sb.Append("  PlatnoscInna: ").Append(PlatnoscInna).Append("\n");
            sb.Append("  OpisPlatnosci: ").Append(OpisPlatnosci).Append("\n");
            sb.Append("  RachunekBankowy: ").Append(RachunekBankowy).Append("\n");
            sb.Append("  RachunekBankowyFaktora: ").Append(RachunekBankowyFaktora).Append("\n");
            sb.Append("  Skonto: ").Append(Skonto).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
