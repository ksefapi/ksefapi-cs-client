/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Dane faktury korygowanej
    /// </summary>
    [DataContract(Name = "DaneFaKorygowanej")]
    public partial class DaneFaKorygowanej
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DaneFaKorygowanej" /> class.
        /// </summary>
        /// <param name="dataWystFaKorygowanej">Data zdarzenia w okresie od 2006-01-01 do 2050-01-01.</param>
        /// <param name="nrFaKorygowanej">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="nrKSeF">Pojedyncze pole wyboru.</param>
        /// <param name="nrKSeFFaKorygowanej">Numer identyfikujący fakturę w Krajowym Systemie e-Faktur (KSeF).</param>
        /// <param name="nrKSeFN">Pojedyncze pole wyboru.</param>
        public DaneFaKorygowanej(DateTime dataWystFaKorygowanej = default, string nrFaKorygowanej = default, int nrKSeF = default, string nrKSeFFaKorygowanej = default, int nrKSeFN = default)
        {
            this.DataWystFaKorygowanej = dataWystFaKorygowanej;
            this.NrFaKorygowanej = nrFaKorygowanej;
            this.NrKSeF = nrKSeF;
            this.NrKSeFFaKorygowanej = nrKSeFFaKorygowanej;
            this.NrKSeFN = nrKSeFN;
        }

        /// <summary>
        /// Data zdarzenia w okresie od 2006-01-01 do 2050-01-01
        /// </summary>
        /// <value>Data zdarzenia w okresie od 2006-01-01 do 2050-01-01</value>
        [DataMember(Name = "DataWystFaKorygowanej", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime DataWystFaKorygowanej { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "NrFaKorygowanej", EmitDefaultValue = false)]
        public string NrFaKorygowanej { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "NrKSeF", EmitDefaultValue = false)]
        public int NrKSeF { get; set; }

        /// <summary>
        /// Numer identyfikujący fakturę w Krajowym Systemie e-Faktur (KSeF)
        /// </summary>
        /// <value>Numer identyfikujący fakturę w Krajowym Systemie e-Faktur (KSeF)</value>
        [DataMember(Name = "NrKSeFFaKorygowanej", EmitDefaultValue = false)]
        public string NrKSeFFaKorygowanej { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "NrKSeFN", EmitDefaultValue = false)]
        public int NrKSeFN { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DaneFaKorygowanej {\n");
            sb.Append("  DataWystFaKorygowanej: ").Append(DataWystFaKorygowanej).Append("\n");
            sb.Append("  NrFaKorygowanej: ").Append(NrFaKorygowanej).Append("\n");
            sb.Append("  NrKSeF: ").Append(NrKSeF).Append("\n");
            sb.Append("  NrKSeFFaKorygowanej: ").Append(NrKSeFFaKorygowanej).Append("\n");
            sb.Append("  NrKSeFN: ").Append(NrKSeFN).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
