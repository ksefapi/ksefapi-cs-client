/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Obciążenia
    /// </summary>
    [DataContract(Name = "Obciazenia")]
    public partial class Obciazenia
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Obciazenia" /> class.
        /// </summary>
        /// <param name="kwota">Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku.</param>
        /// <param name="powod">Typ znakowy ograniczony do 256 znaków.</param>
        public Obciazenia(double kwota = default, string powod = default)
        {
            this.Kwota = kwota;
            this.Powod = powod;
        }

        /// <summary>
        /// Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku
        /// </summary>
        /// <value>Wartość numeryczna 18 znaków max, w tym 2 znaki po przecinku</value>
        [DataMember(Name = "Kwota", EmitDefaultValue = false)]
        public double Kwota { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "Powod", EmitDefaultValue = false)]
        public string Powod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Obciazenia {\n");
            sb.Append("  Kwota: ").Append(Kwota).Append("\n");
            sb.Append("  Powod: ").Append(Powod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
