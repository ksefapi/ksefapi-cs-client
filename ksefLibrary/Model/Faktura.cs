/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Faktura VAT
    /// </summary>
    [DataContract(Name = "Faktura")]
    public partial class Faktura
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Faktura" /> class.
        /// </summary>
        /// <param name="naglowek">naglowek.</param>
        /// <param name="podmiot1">podmiot1.</param>
        /// <param name="podmiot2">podmiot2.</param>
        /// <param name="podmiot3">podmiot3.</param>
        /// <param name="podmiotUpowazniony">podmiotUpowazniony.</param>
        /// <param name="fa">fa.</param>
        /// <param name="stopka">stopka.</param>
        public Faktura(TNaglowek naglowek = default, Podmiot1 podmiot1 = default, Podmiot2 podmiot2 = default, List<Podmiot3> podmiot3 = default, PodmiotUpowazniony podmiotUpowazniony = default, Fa fa = default, Stopka stopka = default)
        {
            this.Naglowek = naglowek;
            this.Podmiot1 = podmiot1;
            this.Podmiot2 = podmiot2;
            this.Podmiot3 = podmiot3;
            this.PodmiotUpowazniony = podmiotUpowazniony;
            this.Fa = fa;
            this.Stopka = stopka;
        }

        /// <summary>
        /// Gets or Sets Naglowek
        /// </summary>
        [DataMember(Name = "Naglowek", EmitDefaultValue = false)]
        public TNaglowek Naglowek { get; set; }

        /// <summary>
        /// Gets or Sets Podmiot1
        /// </summary>
        [DataMember(Name = "Podmiot1", EmitDefaultValue = false)]
        public Podmiot1 Podmiot1 { get; set; }

        /// <summary>
        /// Gets or Sets Podmiot2
        /// </summary>
        [DataMember(Name = "Podmiot2", EmitDefaultValue = false)]
        public Podmiot2 Podmiot2 { get; set; }

        /// <summary>
        /// Gets or Sets Podmiot3
        /// </summary>
        [DataMember(Name = "Podmiot3", EmitDefaultValue = false)]
        public List<Podmiot3> Podmiot3 { get; set; }

        /// <summary>
        /// Gets or Sets PodmiotUpowazniony
        /// </summary>
        [DataMember(Name = "PodmiotUpowazniony", EmitDefaultValue = false)]
        public PodmiotUpowazniony PodmiotUpowazniony { get; set; }

        /// <summary>
        /// Gets or Sets Fa
        /// </summary>
        [DataMember(Name = "Fa", EmitDefaultValue = false)]
        public Fa Fa { get; set; }

        /// <summary>
        /// Gets or Sets Stopka
        /// </summary>
        [DataMember(Name = "Stopka", EmitDefaultValue = false)]
        public Stopka Stopka { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Faktura {\n");
            sb.Append("  Naglowek: ").Append(Naglowek).Append("\n");
            sb.Append("  Podmiot1: ").Append(Podmiot1).Append("\n");
            sb.Append("  Podmiot2: ").Append(Podmiot2).Append("\n");
            sb.Append("  Podmiot3: ").Append(Podmiot3).Append("\n");
            sb.Append("  PodmiotUpowazniony: ").Append(PodmiotUpowazniony).Append("\n");
            sb.Append("  Fa: ").Append(Fa).Append("\n");
            sb.Append("  Stopka: ").Append(Stopka).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
