/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// KsefPublicKeyResponse
    /// </summary>
    [DataContract(Name = "KsefPublicKeyResponse")]
    public partial class KsefPublicKeyResponse
    {
        /// <summary>
        /// Defines Algorithm
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AlgorithmEnum
        {
            /// <summary>
            /// Enum RSA for value: RSA
            /// </summary>
            [EnumMember(Value = "RSA")]
            RSA = 1
        }


        /// <summary>
        /// Gets or Sets Algorithm
        /// </summary>
        [DataMember(Name = "algorithm", IsRequired = true, EmitDefaultValue = true)]
        public AlgorithmEnum Algorithm { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="KsefPublicKeyResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KsefPublicKeyResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KsefPublicKeyResponse" /> class.
        /// </summary>
        /// <param name="algorithm">algorithm (required).</param>
        /// <param name="publicKey">publicKey (required).</param>
        public KsefPublicKeyResponse(AlgorithmEnum algorithm = default, byte[] publicKey = default)
        {
            this.Algorithm = algorithm;
            // to ensure "publicKey" is required (not null)
            if (publicKey == null)
            {
                throw new ArgumentNullException("publicKey is a required property for KsefPublicKeyResponse and cannot be null");
            }
            this.PublicKey = publicKey;
        }

        /// <summary>
        /// Gets or Sets PublicKey
        /// </summary>
        [DataMember(Name = "publicKey", IsRequired = true, EmitDefaultValue = true)]
        public byte[] PublicKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KsefPublicKeyResponse {\n");
            sb.Append("  Algorithm: ").Append(Algorithm).Append("\n");
            sb.Append("  PublicKey: ").Append(PublicKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
