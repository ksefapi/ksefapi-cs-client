/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Warunki transakcji, o ile występują
    /// </summary>
    [DataContract(Name = "WarunkiTransakcji")]
    public partial class WarunkiTransakcji
    {

        /// <summary>
        /// Gets or Sets WalutaUmowna
        /// </summary>
        [DataMember(Name = "WalutaUmowna", EmitDefaultValue = false)]
        public TKodWaluty? WalutaUmowna { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WarunkiTransakcji" /> class.
        /// </summary>
        /// <param name="umowy">umowy.</param>
        /// <param name="zamowienia">zamowienia.</param>
        /// <param name="nrPartiiTowaru">nrPartiiTowaru.</param>
        /// <param name="warunkiDostawy">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="kursUmowny">Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku.</param>
        /// <param name="walutaUmowna">walutaUmowna.</param>
        /// <param name="transport">transport.</param>
        /// <param name="podmiotPosredniczacy">Pojedyncze pole wyboru.</param>
        public WarunkiTransakcji(List<Umowy> umowy = default, List<Zamowienia> zamowienia = default, List<string> nrPartiiTowaru = default, string warunkiDostawy = default, double kursUmowny = default, TKodWaluty? walutaUmowna = default, List<Transport> transport = default, int podmiotPosredniczacy = default)
        {
            this.Umowy = umowy;
            this.Zamowienia = zamowienia;
            this.NrPartiiTowaru = nrPartiiTowaru;
            this.WarunkiDostawy = warunkiDostawy;
            this.KursUmowny = kursUmowny;
            this.WalutaUmowna = walutaUmowna;
            this.Transport = transport;
            this.PodmiotPosredniczacy = podmiotPosredniczacy;
        }

        /// <summary>
        /// Gets or Sets Umowy
        /// </summary>
        [DataMember(Name = "Umowy", EmitDefaultValue = false)]
        public List<Umowy> Umowy { get; set; }

        /// <summary>
        /// Gets or Sets Zamowienia
        /// </summary>
        [DataMember(Name = "Zamowienia", EmitDefaultValue = false)]
        public List<Zamowienia> Zamowienia { get; set; }

        /// <summary>
        /// Gets or Sets NrPartiiTowaru
        /// </summary>
        [DataMember(Name = "NrPartiiTowaru", EmitDefaultValue = false)]
        public List<string> NrPartiiTowaru { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "WarunkiDostawy", EmitDefaultValue = false)]
        public string WarunkiDostawy { get; set; }

        /// <summary>
        /// Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku
        /// </summary>
        /// <value>Typ wykorzystywany do określenia ilości. Wartość numeryczna 22 znaki max, w tym 6 po przecinku</value>
        [DataMember(Name = "KursUmowny", EmitDefaultValue = false)]
        public double KursUmowny { get; set; }

        /// <summary>
        /// Gets or Sets Transport
        /// </summary>
        [DataMember(Name = "Transport", EmitDefaultValue = false)]
        public List<Transport> Transport { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "PodmiotPosredniczacy", EmitDefaultValue = false)]
        public int PodmiotPosredniczacy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WarunkiTransakcji {\n");
            sb.Append("  Umowy: ").Append(Umowy).Append("\n");
            sb.Append("  Zamowienia: ").Append(Zamowienia).Append("\n");
            sb.Append("  NrPartiiTowaru: ").Append(NrPartiiTowaru).Append("\n");
            sb.Append("  WarunkiDostawy: ").Append(WarunkiDostawy).Append("\n");
            sb.Append("  KursUmowny: ").Append(KursUmowny).Append("\n");
            sb.Append("  WalutaUmowna: ").Append(WalutaUmowna).Append("\n");
            sb.Append("  Transport: ").Append(Transport).Append("\n");
            sb.Append("  PodmiotPosredniczacy: ").Append(PodmiotPosredniczacy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
