/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Zwolnienie
    /// </summary>
    [DataContract(Name = "Zwolnienie")]
    public partial class Zwolnienie
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Zwolnienie" /> class.
        /// </summary>
        /// <param name="p19">Pojedyncze pole wyboru.</param>
        /// <param name="p19A">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="p19B">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="p19C">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="p19N">Pojedyncze pole wyboru.</param>
        public Zwolnienie(int p19 = default, string p19A = default, string p19B = default, string p19C = default, int p19N = default)
        {
            this.P19 = p19;
            this.P19A = p19A;
            this.P19B = p19B;
            this.P19C = p19C;
            this.P19N = p19N;
        }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "P_19", EmitDefaultValue = false)]
        public int P19 { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "P_19A", EmitDefaultValue = false)]
        public string P19A { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "P_19B", EmitDefaultValue = false)]
        public string P19B { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "P_19C", EmitDefaultValue = false)]
        public string P19C { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "P_19N", EmitDefaultValue = false)]
        public int P19N { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Zwolnienie {\n");
            sb.Append("  P19: ").Append(P19).Append("\n");
            sb.Append("  P19A: ").Append(P19A).Append("\n");
            sb.Append("  P19B: ").Append(P19B).Append("\n");
            sb.Append("  P19C: ").Append(P19C).Append("\n");
            sb.Append("  P19N: ").Append(P19N).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
