/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// W przypadku korekty danych nabywcy występującego jako Podmiot2 lub dodatkowego nabywcy występującego jako Podmiot3 należy podać pełne dane tego podmiotu występujące na fakturze korygowanej. Korekcie nie podlegają błędne numery identyfikujące nabywcę oraz dodatkowego nabywcę. W przypadku korygowania pozostałych danych nabywcy lub dodatkowego nabywcy wskazany numer identyfikacyjny ma być tożsamy z numerem w części Podmiot2 względnie Podmiot3 faktury korygującej
    /// </summary>
    [DataContract(Name = "Podmiot2K")]
    public partial class Podmiot2K
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Podmiot2K" /> class.
        /// </summary>
        /// <param name="daneIdentyfikacyjne">daneIdentyfikacyjne.</param>
        /// <param name="adres">adres.</param>
        /// <param name="iDNabywcy">Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej.</param>
        public Podmiot2K(TPodmiot2 daneIdentyfikacyjne = default, TAdres adres = default, string iDNabywcy = default)
        {
            this.DaneIdentyfikacyjne = daneIdentyfikacyjne;
            this.Adres = adres;
            this.IDNabywcy = iDNabywcy;
        }

        /// <summary>
        /// Gets or Sets DaneIdentyfikacyjne
        /// </summary>
        [DataMember(Name = "DaneIdentyfikacyjne", EmitDefaultValue = false)]
        public TPodmiot2 DaneIdentyfikacyjne { get; set; }

        /// <summary>
        /// Gets or Sets Adres
        /// </summary>
        [DataMember(Name = "Adres", EmitDefaultValue = false)]
        public TAdres Adres { get; set; }

        /// <summary>
        /// Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej
        /// </summary>
        /// <value>Unikalny klucz powiązania danych nabywcy na fakturach korygujących, w przypadku gdy dane nabywcy na fakturze korygującej zmieniły się w stosunku do danych na fakturze korygowanej</value>
        [DataMember(Name = "IDNabywcy", EmitDefaultValue = false)]
        public string IDNabywcy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Podmiot2K {\n");
            sb.Append("  DaneIdentyfikacyjne: ").Append(DaneIdentyfikacyjne).Append("\n");
            sb.Append("  Adres: ").Append(Adres).Append("\n");
            sb.Append("  IDNabywcy: ").Append(IDNabywcy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
