/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Pozosta≈Çe dane na fakturze
    /// </summary>
    [DataContract(Name = "Stopka")]
    public partial class Stopka
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Stopka" /> class.
        /// </summary>
        /// <param name="informacje">informacje.</param>
        /// <param name="rejestry">rejestry.</param>
        public Stopka(List<Informacje> informacje = default, List<Rejestry> rejestry = default)
        {
            this.Informacje = informacje;
            this.Rejestry = rejestry;
        }

        /// <summary>
        /// Gets or Sets Informacje
        /// </summary>
        [DataMember(Name = "Informacje", EmitDefaultValue = false)]
        public List<Informacje> Informacje { get; set; }

        /// <summary>
        /// Gets or Sets Rejestry
        /// </summary>
        [DataMember(Name = "Rejestry", EmitDefaultValue = false)]
        public List<Rejestry> Rejestry { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Stopka {\n");
            sb.Append("  Informacje: ").Append(Informacje).Append("\n");
            sb.Append("  Rejestry: ").Append(Rejestry).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
