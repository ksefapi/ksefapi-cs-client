/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// KsefInvoiceVisualizeRequest
    /// </summary>
    [DataContract(Name = "KsefInvoiceVisualizeRequest")]
    public partial class KsefInvoiceVisualizeRequest
    {
        /// <summary>
        /// Defines OutputFormat
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OutputFormatEnum
        {
            /// <summary>
            /// Enum Html for value: html
            /// </summary>
            [EnumMember(Value = "html")]
            Html = 1,

            /// <summary>
            /// Enum Pdf for value: pdf
            /// </summary>
            [EnumMember(Value = "pdf")]
            Pdf = 2
        }


        /// <summary>
        /// Gets or Sets OutputFormat
        /// </summary>
        [DataMember(Name = "outputFormat", IsRequired = true, EmitDefaultValue = true)]
        public OutputFormatEnum OutputFormat { get; set; }
        /// <summary>
        /// Defines OutputLanguage
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OutputLanguageEnum
        {
            /// <summary>
            /// Enum Pl for value: pl
            /// </summary>
            [EnumMember(Value = "pl")]
            Pl = 1
        }


        /// <summary>
        /// Gets or Sets OutputLanguage
        /// </summary>
        [DataMember(Name = "outputLanguage", IsRequired = true, EmitDefaultValue = true)]
        public OutputLanguageEnum OutputLanguage { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="KsefInvoiceVisualizeRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KsefInvoiceVisualizeRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KsefInvoiceVisualizeRequest" /> class.
        /// </summary>
        /// <param name="includeLogo">includeLogo (required).</param>
        /// <param name="includeQrCode">includeQrCode (required).</param>
        /// <param name="outputFormat">outputFormat (required).</param>
        /// <param name="outputLanguage">outputLanguage (required).</param>
        /// <param name="invoiceKsefNumber">invoiceKsefNumber (required).</param>
        /// <param name="invoiceData">invoiceData (required).</param>
        public KsefInvoiceVisualizeRequest(bool includeLogo = default, bool includeQrCode = default, OutputFormatEnum outputFormat = default, OutputLanguageEnum outputLanguage = default, string invoiceKsefNumber = default, byte[] invoiceData = default)
        {
            this.IncludeLogo = includeLogo;
            this.IncludeQrCode = includeQrCode;
            this.OutputFormat = outputFormat;
            this.OutputLanguage = outputLanguage;
            // to ensure "invoiceKsefNumber" is required (not null)
            if (invoiceKsefNumber == null)
            {
                throw new ArgumentNullException("invoiceKsefNumber is a required property for KsefInvoiceVisualizeRequest and cannot be null");
            }
            this.InvoiceKsefNumber = invoiceKsefNumber;
            // to ensure "invoiceData" is required (not null)
            if (invoiceData == null)
            {
                throw new ArgumentNullException("invoiceData is a required property for KsefInvoiceVisualizeRequest and cannot be null");
            }
            this.InvoiceData = invoiceData;
        }

        /// <summary>
        /// Gets or Sets IncludeLogo
        /// </summary>
        [DataMember(Name = "includeLogo", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeLogo { get; set; }

        /// <summary>
        /// Gets or Sets IncludeQrCode
        /// </summary>
        [DataMember(Name = "includeQrCode", IsRequired = true, EmitDefaultValue = true)]
        public bool IncludeQrCode { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceKsefNumber
        /// </summary>
        [DataMember(Name = "invoiceKsefNumber", IsRequired = true, EmitDefaultValue = true)]
        public string InvoiceKsefNumber { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceData
        /// </summary>
        [DataMember(Name = "invoiceData", IsRequired = true, EmitDefaultValue = true)]
        public byte[] InvoiceData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KsefInvoiceVisualizeRequest {\n");
            sb.Append("  IncludeLogo: ").Append(IncludeLogo).Append("\n");
            sb.Append("  IncludeQrCode: ").Append(IncludeQrCode).Append("\n");
            sb.Append("  OutputFormat: ").Append(OutputFormat).Append("\n");
            sb.Append("  OutputLanguage: ").Append(OutputLanguage).Append("\n");
            sb.Append("  InvoiceKsefNumber: ").Append(InvoiceKsefNumber).Append("\n");
            sb.Append("  InvoiceData: ").Append(InvoiceData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
