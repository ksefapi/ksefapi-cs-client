/*
 * KSeF API
 *
 * API do systemu KSeF
 *
 * The version of the OpenAPI document: 1.2.4
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using FileParameter = KsefApi.Client.FileParameter;
using OpenAPIDateConverter = KsefApi.Client.OpenAPIDateConverter;

namespace KsefApi.Model
{
    /// <summary>
    /// Transport
    /// </summary>
    [DataContract(Name = "Transport")]
    public partial class Transport
    {

        /// <summary>
        /// Gets or Sets RodzajTransportu
        /// </summary>
        [DataMember(Name = "RodzajTransportu", EmitDefaultValue = false)]
        public TRodzajTransportu? RodzajTransportu { get; set; }

        /// <summary>
        /// Gets or Sets OpisLadunku
        /// </summary>
        [DataMember(Name = "OpisLadunku", EmitDefaultValue = false)]
        public TLadunek? OpisLadunku { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Transport" /> class.
        /// </summary>
        /// <param name="rodzajTransportu">rodzajTransportu.</param>
        /// <param name="transportInny">Pojedyncze pole wyboru.</param>
        /// <param name="opisInnegoTransportu">Typ znakowy ograniczony do 50 znaków.</param>
        /// <param name="przewoznik">przewoznik.</param>
        /// <param name="nrZleceniaTransportu">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="opisLadunku">opisLadunku.</param>
        /// <param name="ladunekInny">Pojedyncze pole wyboru.</param>
        /// <param name="opisInnegoLadunku">Typ znakowy ograniczony do 50 znaków.</param>
        /// <param name="jednostkaOpakowania">Typ znakowy ograniczony do 256 znaków.</param>
        /// <param name="dataGodzRozpTransportu">Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z.</param>
        /// <param name="dataGodzZakTransportu">Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z.</param>
        /// <param name="wysylkaZ">wysylkaZ.</param>
        /// <param name="wysylkaPrzez">wysylkaPrzez.</param>
        /// <param name="wysylkaDo">wysylkaDo.</param>
        public Transport(TRodzajTransportu? rodzajTransportu = default, int transportInny = default, string opisInnegoTransportu = default, Przewoznik przewoznik = default, string nrZleceniaTransportu = default, TLadunek? opisLadunku = default, int ladunekInny = default, string opisInnegoLadunku = default, string jednostkaOpakowania = default, DateTime dataGodzRozpTransportu = default, DateTime dataGodzZakTransportu = default, TAdres wysylkaZ = default, List<TAdres> wysylkaPrzez = default, TAdres wysylkaDo = default)
        {
            this.RodzajTransportu = rodzajTransportu;
            this.TransportInny = transportInny;
            this.OpisInnegoTransportu = opisInnegoTransportu;
            this.Przewoznik = przewoznik;
            this.NrZleceniaTransportu = nrZleceniaTransportu;
            this.OpisLadunku = opisLadunku;
            this.LadunekInny = ladunekInny;
            this.OpisInnegoLadunku = opisInnegoLadunku;
            this.JednostkaOpakowania = jednostkaOpakowania;
            this.DataGodzRozpTransportu = dataGodzRozpTransportu;
            this.DataGodzZakTransportu = dataGodzZakTransportu;
            this.WysylkaZ = wysylkaZ;
            this.WysylkaPrzez = wysylkaPrzez;
            this.WysylkaDo = wysylkaDo;
        }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "TransportInny", EmitDefaultValue = false)]
        public int TransportInny { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 50 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 50 znaków</value>
        [DataMember(Name = "OpisInnegoTransportu", EmitDefaultValue = false)]
        public string OpisInnegoTransportu { get; set; }

        /// <summary>
        /// Gets or Sets Przewoznik
        /// </summary>
        [DataMember(Name = "Przewoznik", EmitDefaultValue = false)]
        public Przewoznik Przewoznik { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "NrZleceniaTransportu", EmitDefaultValue = false)]
        public string NrZleceniaTransportu { get; set; }

        /// <summary>
        /// Pojedyncze pole wyboru
        /// </summary>
        /// <value>Pojedyncze pole wyboru</value>
        [DataMember(Name = "LadunekInny", EmitDefaultValue = false)]
        public int LadunekInny { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 50 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 50 znaków</value>
        [DataMember(Name = "OpisInnegoLadunku", EmitDefaultValue = false)]
        public string OpisInnegoLadunku { get; set; }

        /// <summary>
        /// Typ znakowy ograniczony do 256 znaków
        /// </summary>
        /// <value>Typ znakowy ograniczony do 256 znaków</value>
        [DataMember(Name = "JednostkaOpakowania", EmitDefaultValue = false)]
        public string JednostkaOpakowania { get; set; }

        /// <summary>
        /// Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z
        /// </summary>
        /// <value>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</value>
        [DataMember(Name = "DataGodzRozpTransportu", EmitDefaultValue = false)]
        public DateTime DataGodzRozpTransportu { get; set; }

        /// <summary>
        /// Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z
        /// </summary>
        /// <value>Data i czas zdarzenia w okresie od 01.10.2021T00:00:00Z do 01.01.2050T23:59:59Z</value>
        [DataMember(Name = "DataGodzZakTransportu", EmitDefaultValue = false)]
        public DateTime DataGodzZakTransportu { get; set; }

        /// <summary>
        /// Gets or Sets WysylkaZ
        /// </summary>
        [DataMember(Name = "WysylkaZ", EmitDefaultValue = false)]
        public TAdres WysylkaZ { get; set; }

        /// <summary>
        /// Gets or Sets WysylkaPrzez
        /// </summary>
        [DataMember(Name = "WysylkaPrzez", EmitDefaultValue = false)]
        public List<TAdres> WysylkaPrzez { get; set; }

        /// <summary>
        /// Gets or Sets WysylkaDo
        /// </summary>
        [DataMember(Name = "WysylkaDo", EmitDefaultValue = false)]
        public TAdres WysylkaDo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Transport {\n");
            sb.Append("  RodzajTransportu: ").Append(RodzajTransportu).Append("\n");
            sb.Append("  TransportInny: ").Append(TransportInny).Append("\n");
            sb.Append("  OpisInnegoTransportu: ").Append(OpisInnegoTransportu).Append("\n");
            sb.Append("  Przewoznik: ").Append(Przewoznik).Append("\n");
            sb.Append("  NrZleceniaTransportu: ").Append(NrZleceniaTransportu).Append("\n");
            sb.Append("  OpisLadunku: ").Append(OpisLadunku).Append("\n");
            sb.Append("  LadunekInny: ").Append(LadunekInny).Append("\n");
            sb.Append("  OpisInnegoLadunku: ").Append(OpisInnegoLadunku).Append("\n");
            sb.Append("  JednostkaOpakowania: ").Append(JednostkaOpakowania).Append("\n");
            sb.Append("  DataGodzRozpTransportu: ").Append(DataGodzRozpTransportu).Append("\n");
            sb.Append("  DataGodzZakTransportu: ").Append(DataGodzZakTransportu).Append("\n");
            sb.Append("  WysylkaZ: ").Append(WysylkaZ).Append("\n");
            sb.Append("  WysylkaPrzez: ").Append(WysylkaPrzez).Append("\n");
            sb.Append("  WysylkaDo: ").Append(WysylkaDo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
